
> @koalaui/ets-plugin@1.3.5+devel test
> npm run compile && npm run ets:test && mocha --reporter-option maxDiffSize=0


> @koalaui/ets-plugin@1.3.5+devel compile
> npm run patch-ts-patch && npm run patch-ohos-typescript && node ../node_modules/@ohos/typescript/bin/tsc -b .


> @koalaui/ets-plugin@1.3.5+devel patch-ts-patch
> node ../tools/patch-ts-patch.mjs ../node_modules/ts-patch


> @koalaui/ets-plugin@1.3.5+devel patch-ohos-typescript
> cd ../node_modules/@ohos/typescript && ts-patch install


> @koalaui/ets-plugin@1.3.5+devel ets:test
> cd test/ets; ../../../node_modules/@ohos/typescript/bin/tsc

ETS->TS: D:/src/koala-ui/ets-plugin/test/ets/Rewrite.ets
Would transform <ref *2> IdentifierObject {
  pos: 1046,
  end: 1070,
  flags: 1073741824,
  modifierFlagsCache: 0,
  transformFlags: 0,
  parent: <ref *1> NodeObject {
    pos: 1046,
    end: 1174,
    flags: 1073741824,
    modifierFlagsCache: 0,
    transformFlags: 4352,
    parent: NodeObject {
      pos: 1046,
      end: 1174,
      flags: 1073741824,
      modifierFlagsCache: 0,
      transformFlags: 4352,
      parent: [NodeObject],
      kind: 235,
      expression: [Circular *1],
      flowNode: [Object]
    },
    kind: 204,
    expression: [Circular *2],
    typeArguments: undefined,
    arguments: [
      [NodeObject],
      [NodeObject],
      pos: 1071,
      end: 1173,
      hasTrailingComma: false,
      transformFlags: 4352
    ],
    id: 9677
  },
  kind: 78,
  originalKeywordKind: undefined,
  escapedText: 'animateTo',
  flowNode: {
    flags: 2050,
    node: NodeObject {
      pos: 1039,
      end: 1240,
      flags: 1073742080,
      modifierFlagsCache: 536870912,
      transformFlags: 4352,
      parent: [NodeObject],
      kind: 210,
      decorators: undefined,
      modifiers: undefined,
      symbol: [SymbolObject],
      localSymbol: undefined,
      locals: Map(0) {},
      nextContainer: [NodeObject],
      name: undefined,
      typeParameters: undefined,
      parameters: [Array],
      type: undefined,
      body: [NodeObject],
      equalsGreaterThanToken: [TokenObject],
      flowNode: [Object],
      endFlowNode: [Object],
      contextualType: undefined,
      inferenceContext: undefined,
      id: 9672
    }
  },
  id: 9678
}
KOALA: D:\src\koala-ui\ets-plugin\test\generated\Rewrite.ts
ETS->TS: D:/src/koala-ui/ets-plugin/test/ets/Rewrite2.ets
KOALA: D:\src\koala-ui\ets-plugin\test\generated\Rewrite2.ts
ETS->TS: D:/src/koala-ui/ets-plugin/test/ets/Rewrite3.ets
KOALA: D:\src\koala-ui\ets-plugin\test\generated\Rewrite3.ts


  Basic rewrites of ArkUI syntactic features
    1) Basic rewrites
    2) LocalStorageLinkExample rewrites
    3) LocalStoragePropExample rewrites


  0 passing (14ms)
  3 failing

  1) Basic rewrites of ArkUI syntactic features
       Basic rewrites:

      AssertionError: expected 'import { $r, $rawfile, AppStorage, Ap…' to equal 'import { $r, $rawfile, AppStorage, Ap…'
      + expected - actual

      -import { $r, $rawfile, AppStorage, AppStorageLinkState, ArkButton, ArkCommonStruct1, ArkText, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, bindCustomDialog, contextLocalStateOf, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, propValue, px2fp, px2lpx, px2vp, stateOf, vp2px } from "@koalaui/arkui";
      -import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      -import { MutableState, OnChange, __key, contextLocal, mutableState, remember } from "@koalaui/runtime";
      -export class ArkEntryExampleComponent extends ArkCommonStruct1<ArkEntryExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkEntryExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkComponentExampleComponent extends ArkCommonStruct1<ArkComponentExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkComponentExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkBuildExampleComponent extends ArkCommonStruct1<ArkBuildExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            instance.fontColor(Color.Red)
      -                .width(100);
      -        }, () => {
      -        }, "message");
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkBuildExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkStateExampleComponent extends ArkCommonStruct1<ArkStateExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _x = stateOf<string>("hello", this, __key());
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, this.x);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkStateExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkLinkExampleComponent extends ArkCommonStruct1<ArkLinkExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -        this._x = initializers.x;
      -    }
      -    _x: MutableState<string>;
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, this.x);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkLinkExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkPropExampleComponent extends ArkCommonStruct1<ArkPropExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -        this._x = mutableState(initializers.x);
      -    }
      -    _x: MutableState<string>;
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build(_x: string) {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        propValue(_x, this._x);
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, this.x);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkPropExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build(initializers.x);
      -        return receiver;
      -    }
      -}
      -class ArkProvideExampleComponent extends ArkCommonStruct1<ArkProvideExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -        this._x = initializers.x;
      -    }
      -    _x: MutableState<string>;
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, this.x);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const __provide_name = contextLocalStateOf<string>("name", () => "text");
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkProvideExampleComponent({
      -                x: __provide_name,
      -                ...initializers
      -            }, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkConsumeExampleComponent extends ArkCommonStruct1<ArkConsumeExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -        this._x = initializers.x;
      -    }
      -    _x: MutableState<string>;
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, this.x);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const __consume_name = contextLocal<string>("name");
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkConsumeExampleComponent({
      -                x: __consume_name,
      -                ...initializers
      -            }, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkBuilderExampleComponent extends ArkCommonStruct1<ArkBuilderExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    foo() {
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, "hello");
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        this.foo();
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkBuilderExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -/** @memo */
      -function bar() {
      -    ArkText((instance: TextAttribute) => {
      -        undefined;
      -    }, () => {
      -    }, "hello");
      -}
      -class ArkIComponent extends ArkCommonStruct1<ArkIComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        bar();
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkIComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkBuilderParamExampleComponent extends ArkCommonStruct1<ArkBuilderParamExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    /** @memo */
      -    foo: () => {} = this.initializers?.foo;
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        this.foo();
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkBuilderParamExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -// @Styles and @Extend
      -function looks<T extends CommonMethod<T>>(CommonInstance: T): void {
      -    CommonInstance.height(500)
      -        .width(400)
      -        .backgroundColor(Color.Gray);
      -}
      -function clown__Column<T extends ColumnAttribute>(ColumnInstance: T): void {
      -    ColumnInstance.height(500)
      -        .width(400)
      -        .backgroundColor(Color.Gray);
      -}
      -class ArkWatchExampleComponent extends ArkCommonStruct1<ArkWatchExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _x = stateOf<string>("hello", this, __key());
      -    get x() {
      -        return this._x!.value;
      -    }
      -    set x(value) {
      -        this._x!.value = observableProxy(value);
      -    }
      -    watchFunction() {
      -        console.log("Watch function");
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        OnChange(this.x, () => this.watchFunction());
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkWatchExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkStorageLinkExampleComponent extends ArkCommonStruct1<ArkStorageLinkExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _link = AppStorageLinkState<string>("storage", "Start");
      -    get link() {
      -        return this._link!.value;
      -    }
      -    set link(value) {
      -        this._link!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkStorageLinkExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkStoragePropExampleComponent extends ArkCommonStruct1<ArkStoragePropExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _prop = stateOf<string>(AppStorageLinkState<string>("storage", "Start").value);
      -    get prop() {
      -        return this._prop!.value;
      -    }
      -    set prop(value) {
      -        this._prop!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        propValue(AppStorageLinkState<string>("storage", "Start").value, this._prop);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkStoragePropExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -class ArkCustomDialogExampleComponent extends ArkCommonStruct1<ArkCustomDialogExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    controller: CustomDialogController = this.initializers?.controller;
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkCustomDialogExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -export class ArkCustomDialogControlleExampleComponent extends ArkCommonStruct1<ArkCustomDialogControlleExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    dialogController: CustomDialogController = this.initializers?.dialogController ?? new CustomDialogController({
      -        builder: CustomDialogExample(),
      -        autoCancel: true,
      -        alignment: DialogAlignment.Default,
      -        offset: { dx: 0, dy: 0 },
      -        gridCount: 4,
      -        customStyle: false
      -    });
      -    aboutToAppear() {
      -        this.dialogController.open();
      -    }
      -    aboutToDisappear() {
      -        this.dialogController.close();
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkCustomDialogControlleExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -// ObjectLink and Observed
      -@Observed
      -class ObservedExample {
      -    public c: number;
      -    constructor(c: number) {
      -        this.c = c;
      -    }
      -}
      -class ArkObjectLinkExampleComponent extends ArkCommonStruct1<ArkObjectLinkExampleComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -        this._a = mutableState(initializers.a);
      -    }
      -    _a: MutableState<ObservedExample>;
      -    get a() {
      -        return this._a!.value;
      -    }
      -    set a(value) {
      -        this._a!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build(_a: ObservedExample) {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        propValue(_a, this._a);
      -        ArkButton((instance: ButtonAttribute) => {
      -            instance.onClick(() => {
      -                this.a.c += 1;
      -            });
      -        }, () => {
      -        });
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkObjectLinkExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build(initializers.a);
      -        return receiver;
      -    }
      -}
      -class ArkObjectLinkExampleParentComponent extends ArkCommonStruct1<ArkObjectLinkExampleParentComponent, any> {
      -    private _entry_local_storage_ = new LocalStorage();
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _a = stateOf<ObservedExample[]>([new ObservedExample(0), new ObservedExample(0)], this, __key());
      -    get a() {
      -        return this._a!.value;
      -    }
      -    set a(value) {
      -        this._a!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ObjectLinkExample();
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkObjectLinkExampleParentComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -/** @memo */
      -export function EntryExample(initializers?: any) {
      -    return ArkEntryExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function ComponentExample(initializers?: any) {
      -    return ArkComponentExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function BuildExample(initializers?: any) {
      -    return ArkBuildExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function StateExample(initializers?: any) {
      -    return ArkStateExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function LinkExample(initializers?: any) {
      -    return ArkLinkExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function PropExample(initializers?: any) {
      -    return ArkPropExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function ProvideExample(initializers?: any) {
      -    return ArkProvideExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function ConsumeExample(initializers?: any) {
      -    return ArkConsumeExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function BuilderExample(initializers?: any) {
      -    return ArkBuilderExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function I(initializers?: any) {
      -    return ArkIComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function BuilderParamExample(initializers?: any) {
      -    return ArkBuilderParamExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function WatchExample(initializers?: any) {
      -    return ArkWatchExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function StorageLinkExample(initializers?: any) {
      -    return ArkStorageLinkExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function StoragePropExample(initializers?: any) {
      -    return ArkStoragePropExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function CustomDialogExampleImpl(initializers?: any) {
      -    return ArkCustomDialogExampleComponent._invoke(initializers);
      -}
      -export function CustomDialogExample(initializer: any = {}) {
      -    return { build: bindCustomDialog(CustomDialogExampleImpl, initializer), buildOptions: initializer };
      -}
      -/** @memo */
      -export function CustomDialogControlleExample(initializers?: any) {
      -    return ArkCustomDialogControlleExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function ObjectLinkExample(initializers?: any) {
      -    return ArkObjectLinkExampleComponent._invoke(initializers);
      -}
      -/** @memo */
      -export function ObjectLinkExampleParent(initializers?: any) {
      -    return ArkObjectLinkExampleParentComponent._invoke(initializers);
      -}
      -registerArkuiEntry(EntryExample, "Rewrite");
      -export const __Entry = EntryExample;
      +import { $r, $rawfile, AppStorage, AppStorageLinkState, ArkButton, ArkCommonStruct1, ArkText, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, bindCustomDialog, contextLocalStateOf, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, propValue, px2fp, px2lpx, px2vp, stateOf, vp2px } from "@koalaui/arkui";
      +import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      +import { MutableState, OnChange, __key, contextLocal, mutableState, remember } from "@koalaui/runtime";
      +export class ArkEntryExampleComponent extends ArkCommonStruct1<ArkEntryExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkEntryExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkComponentExampleComponent extends ArkCommonStruct1<ArkComponentExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkComponentExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkBuildExampleComponent extends ArkCommonStruct1<ArkBuildExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            instance.fontColor(Color.Red)
      +                .width(100);
      +        }, () => {
      +        }, "message");
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkBuildExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkStateExampleComponent extends ArkCommonStruct1<ArkStateExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _x = stateOf<string>("hello", this, __key());
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, this.x);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkStateExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkLinkExampleComponent extends ArkCommonStruct1<ArkLinkExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +        this._x = initializers.x;
      +    }
      +    _x: MutableState<string>;
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, this.x);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkLinkExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkPropExampleComponent extends ArkCommonStruct1<ArkPropExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +        this._x = mutableState(initializers.x);
      +    }
      +    _x: MutableState<string>;
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build(_x: string) {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        propValue(_x, this._x);
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, this.x);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkPropExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build(initializers.x);
      +        return receiver;
      +    }
      +}
      +class ArkProvideExampleComponent extends ArkCommonStruct1<ArkProvideExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +        this._x = initializers.x;
      +    }
      +    _x: MutableState<string>;
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, this.x);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const __provide_name = contextLocalStateOf<string>("name", () => "text");
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkProvideExampleComponent({
      +                x: __provide_name,
      +                ...initializers
      +            }, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkConsumeExampleComponent extends ArkCommonStruct1<ArkConsumeExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +        this._x = initializers.x;
      +    }
      +    _x: MutableState<string>;
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, this.x);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const __consume_name = contextLocal<string>("name");
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkConsumeExampleComponent({
      +                x: __consume_name,
      +                ...initializers
      +            }, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkChildComponent extends ArkCommonStruct1<ArkChildComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _myProp = stateOf<number>(40, this, __key());
      +    get myProp() {
      +        return this._myProp!.value;
      +    }
      +    set myProp(value) {
      +        this._myProp!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            instance.width(this.myProp + 20)
      +                .onClick(() => {
      +                this.__animateTo({ duration: 1000 }, () => {
      +                    this.myProp = this.myProp == 40 ? 120 : 40;
      +                });
      +                console.log("ARK CHILD", this.myProp);
      +            })
      +                .height(this.myProp + 100);
      +        }, () => {
      +        }, "Child");
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkChildComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkBuilderExampleComponent extends ArkCommonStruct1<ArkBuilderExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    foo() {
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, "hello");
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        this.foo();
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkBuilderExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +/** @memo */
      +function bar() {
      +    ArkText((instance: TextAttribute) => {
      +        undefined;
      +    }, () => {
      +    }, "hello");
      +}
      +class ArkIComponent extends ArkCommonStruct1<ArkIComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        bar();
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkIComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkBuilderParamExampleComponent extends ArkCommonStruct1<ArkBuilderParamExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    /** @memo */
      +    foo: () => {} = this.initializers?.foo;
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        this.foo();
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkBuilderParamExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +// @Styles and @Extend
      +function looks<T extends CommonMethod<T>>(CommonInstance: T): void {
      +    CommonInstance.height(500)
      +        .width(400)
      +        .backgroundColor(Color.Gray);
      +}
      +function clown__Column<T extends ColumnAttribute>(ColumnInstance: T): void {
      +    ColumnInstance.height(500)
      +        .width(400)
      +        .backgroundColor(Color.Gray);
      +}
      +class ArkWatchExampleComponent extends ArkCommonStruct1<ArkWatchExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _x = stateOf<string>("hello", this, __key());
      +    get x() {
      +        return this._x!.value;
      +    }
      +    set x(value) {
      +        this._x!.value = observableProxy(value);
      +    }
      +    watchFunction() {
      +        console.log("Watch function");
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        OnChange(this.x, () => this.watchFunction());
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkWatchExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkStorageLinkExampleComponent extends ArkCommonStruct1<ArkStorageLinkExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _link = AppStorageLinkState<string>("storage", "Start");
      +    get link() {
      +        return this._link!.value;
      +    }
      +    set link(value) {
      +        this._link!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkStorageLinkExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkStoragePropExampleComponent extends ArkCommonStruct1<ArkStoragePropExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _prop = stateOf<string>(AppStorageLinkState<string>("storage", "Start").value);
      +    get prop() {
      +        return this._prop!.value;
      +    }
      +    set prop(value) {
      +        this._prop!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        propValue(AppStorageLinkState<string>("storage", "Start").value, this._prop);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkStoragePropExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +class ArkCustomDialogExampleComponent extends ArkCommonStruct1<ArkCustomDialogExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    controller: CustomDialogController = this.initializers?.controller;
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkCustomDialogExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +export class ArkCustomDialogControlleExampleComponent extends ArkCommonStruct1<ArkCustomDialogControlleExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    dialogController: CustomDialogController = this.initializers?.dialogController ?? new CustomDialogController({
      +        builder: CustomDialogExample(),
      +        autoCancel: true,
      +        alignment: DialogAlignment.Default,
      +        offset: { dx: 0, dy: 0 },
      +        gridCount: 4,
      +        customStyle: false
      +    });
      +    aboutToAppear() {
      +        this.dialogController.open();
      +    }
      +    aboutToDisappear() {
      +        this.dialogController.close();
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkCustomDialogControlleExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +// ObjectLink and Observed
      +@Observed
      +class ObservedExample {
      +    public c: number;
      +    constructor(c: number) {
      +        this.c = c;
      +    }
      +}
      +class ArkObjectLinkExampleComponent extends ArkCommonStruct1<ArkObjectLinkExampleComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +        this._a = mutableState(initializers.a);
      +    }
      +    _a: MutableState<ObservedExample>;
      +    get a() {
      +        return this._a!.value;
      +    }
      +    set a(value) {
      +        this._a!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build(_a: ObservedExample) {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        propValue(_a, this._a);
      +        ArkButton((instance: ButtonAttribute) => {
      +            instance.onClick(() => {
      +                this.a.c += 1;
      +            });
      +        }, () => {
      +        });
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkObjectLinkExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build(initializers.a);
      +        return receiver;
      +    }
      +}
      +class ArkObjectLinkExampleParentComponent extends ArkCommonStruct1<ArkObjectLinkExampleParentComponent, any> {
      +    private _entry_local_storage_ = new LocalStorage();
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _a = stateOf<ObservedExample[]>([new ObservedExample(0), new ObservedExample(0)], this, __key());
      +    get a() {
      +        return this._a!.value;
      +    }
      +    set a(value) {
      +        this._a!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ObjectLinkExample();
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkObjectLinkExampleParentComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +/** @memo */
      +export function EntryExample(initializers?: any) {
      +    return ArkEntryExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function ComponentExample(initializers?: any) {
      +    return ArkComponentExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function BuildExample(initializers?: any) {
      +    return ArkBuildExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function StateExample(initializers?: any) {
      +    return ArkStateExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function LinkExample(initializers?: any) {
      +    return ArkLinkExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function PropExample(initializers?: any) {
      +    return ArkPropExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function ProvideExample(initializers?: any) {
      +    return ArkProvideExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function ConsumeExample(initializers?: any) {
      +    return ArkConsumeExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function Child(initializers?: any) {
      +    return ArkChildComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function BuilderExample(initializers?: any) {
      +    return ArkBuilderExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function I(initializers?: any) {
      +    return ArkIComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function BuilderParamExample(initializers?: any) {
      +    return ArkBuilderParamExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function WatchExample(initializers?: any) {
      +    return ArkWatchExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function StorageLinkExample(initializers?: any) {
      +    return ArkStorageLinkExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function StoragePropExample(initializers?: any) {
      +    return ArkStoragePropExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function CustomDialogExampleImpl(initializers?: any) {
      +    return ArkCustomDialogExampleComponent._invoke(initializers);
      +}
      +export function CustomDialogExample(initializer: any = {}) {
      +    return { build: bindCustomDialog(CustomDialogExampleImpl, initializer), buildOptions: initializer };
      +}
      +/** @memo */
      +export function CustomDialogControlleExample(initializers?: any) {
      +    return ArkCustomDialogControlleExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function ObjectLinkExample(initializers?: any) {
      +    return ArkObjectLinkExampleComponent._invoke(initializers);
      +}
      +/** @memo */
      +export function ObjectLinkExampleParent(initializers?: any) {
      +    return ArkObjectLinkExampleParentComponent._invoke(initializers);
      +}
      +registerArkuiEntry(EntryExample, "Rewrite");
      +export const __Entry = EntryExample;
      
      at Context.<anonymous> (test\rewrites.test.ts:9:16)
      at processImmediate (node:internal/timers:471:21)

  2) Basic rewrites of ArkUI syntactic features
       LocalStorageLinkExample rewrites:

      AssertionError: expected 'import { $r, $rawfile, AppStorage, Ar…' to equal 'import { $r, $rawfile, AppStorage, Ar…'
      + expected - actual

      -import { $r, $rawfile, AppStorage, ArkCommonStruct1, ArkText, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, StorageLinkState, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, px2fp, px2lpx, px2vp, vp2px } from "@koalaui/arkui";
      -import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      -import { remember } from "@koalaui/runtime";
      -export const storage = new LocalStorage();
      -class ArkLocalStorageLinkExampleComponent extends ArkCommonStruct1<ArkLocalStorageLinkExampleComponent, any> {
      -    private _entry_local_storage_ = storage;
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _link = StorageLinkState<string>(this._entry_local_storage_, "storage", "Start");
      -    get link() {
      -        return this._link!.value;
      -    }
      -    set link(value) {
      -        this._link!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        ArkText((instance: TextAttribute) => {
      -            undefined;
      -        }, () => {
      -        }, "LocalStorage entry = " + storage.get("storage"));
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkLocalStorageLinkExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -/** @memo */
      -export function LocalStorageLinkExample(initializers?: any) {
      -    return ArkLocalStorageLinkExampleComponent._invoke(initializers);
      -}
      -registerArkuiEntry(LocalStorageLinkExample, "Rewrite2");
      -export const __Entry = LocalStorageLinkExample;
      +import { $r, $rawfile, AppStorage, ArkCommonStruct1, ArkText, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, StorageLinkState, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, px2fp, px2lpx, px2vp, vp2px } from "@koalaui/arkui";
      +import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      +import { remember } from "@koalaui/runtime";
      +export const storage = new LocalStorage();
      +class ArkLocalStorageLinkExampleComponent extends ArkCommonStruct1<ArkLocalStorageLinkExampleComponent, any> {
      +    private _entry_local_storage_ = storage;
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _link = StorageLinkState<string>(this._entry_local_storage_, "storage", "Start");
      +    get link() {
      +        return this._link!.value;
      +    }
      +    set link(value) {
      +        this._link!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        ArkText((instance: TextAttribute) => {
      +            undefined;
      +        }, () => {
      +        }, "LocalStorage entry = " + storage.get("storage"));
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkLocalStorageLinkExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +/** @memo */
      +export function LocalStorageLinkExample(initializers?: any) {
      +    return ArkLocalStorageLinkExampleComponent._invoke(initializers);
      +}
      +registerArkuiEntry(LocalStorageLinkExample, "Rewrite2");
      +export const __Entry = LocalStorageLinkExample;
      
      at Context.<anonymous> (test\rewrites.test.ts:14:16)
      at processImmediate (node:internal/timers:471:21)

  3) Basic rewrites of ArkUI syntactic features
       LocalStoragePropExample rewrites:

      AssertionError: expected 'import { $r, $rawfile, AppStorage, Ar…' to equal 'import { $r, $rawfile, AppStorage, Ar…'
      + expected - actual

      -import { $r, $rawfile, AppStorage, ArkCommonStruct1, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, StorageLinkState, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, propValue, px2fp, px2lpx, px2vp, stateOf, vp2px } from "@koalaui/arkui";
      -import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      -import { remember } from "@koalaui/runtime";
      -import { storage } from "./Rewrite2";
      -class ArkLocalStoragePropExampleComponent extends ArkCommonStruct1<ArkLocalStoragePropExampleComponent, any> {
      -    private _entry_local_storage_ = storage;
      -    constructor(private initializers: any, valueStorage?: ValueStorage) {
      -        super(valueStorage);
      -    }
      -    _prop = stateOf<string>(StorageLinkState<string>(this._entry_local_storage_, "storage", "Start").value);
      -    get prop() {
      -        return this._prop!.value;
      -    }
      -    set prop(value) {
      -        this._prop!.value = observableProxy(value);
      -    }
      -    /** @memo */
      -    _build() {
      -        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      -            return;
      -        propValue(StorageLinkState<string>(this._entry_local_storage_, "storage", "Start").value, this._prop);
      -    }
      -    /** @memo */
      -    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      -        const receiver = createInstance((storage?: ValueStorage) => {
      -            const instance = new ArkLocalStoragePropExampleComponent(initializers, storage);
      -            return instance;
      -        });
      -        receiver._build();
      -        return receiver;
      -    }
      -}
      -/** @memo */
      -export function LocalStoragePropExample(initializers?: any) {
      -    return ArkLocalStoragePropExampleComponent._invoke(initializers);
      -}
      -registerArkuiEntry(LocalStoragePropExample, "Rewrite3");
      -export const __Entry = LocalStoragePropExample;
      +import { $r, $rawfile, AppStorage, ArkCommonStruct1, CanvasRenderingContext2D, CustomDialogController, DataChangeListener, Environment, ForEach, GestureGroup, IDataSource, LocalStorage, LongPressGesture, Observed, OnArkLifecycle, PanGesture, PanGestureOptions, PersistentStorage, PinchGesture, RenderingContextSettings, RotationGesture, Scroller, StorageLinkState, SubscribedAbstractProperty, SwipeGesture, SwiperController, TabsController, TapGesture, TextAreaController, ValueStorage, VideoController, animateTo, createInstance, fp2px, getContext, getInspectorByKey, lpx2px, observableProxy, processArkLifecycleEvent, propValue, px2fp, px2lpx, px2vp, stateOf, vp2px } from "@koalaui/arkui";
      +import { registerArkuiEntry } from "@koalaui/arkui/ohos.router";
      +import { remember } from "@koalaui/runtime";
      +import { storage } from "./Rewrite2";
      +class ArkLocalStoragePropExampleComponent extends ArkCommonStruct1<ArkLocalStoragePropExampleComponent, any> {
      +    private _entry_local_storage_ = storage;
      +    constructor(private initializers: any, valueStorage?: ValueStorage) {
      +        super(valueStorage);
      +    }
      +    _prop = stateOf<string>(StorageLinkState<string>(this._entry_local_storage_, "storage", "Start").value);
      +    get prop() {
      +        return this._prop!.value;
      +    }
      +    set prop(value) {
      +        this._prop!.value = observableProxy(value);
      +    }
      +    /** @memo */
      +    _build() {
      +        if (!OnArkLifecycle((event: any) => processArkLifecycleEvent(this, event)))
      +            return;
      +        propValue(StorageLinkState<string>(this._entry_local_storage_, "storage", "Start").value, this._prop);
      +    }
      +    /** @memo */
      +    static _invoke<T extends ArkCommonStruct1<T, A1>, A1>(initializers?: any) {
      +        const receiver = createInstance((storage?: ValueStorage) => {
      +            const instance = new ArkLocalStoragePropExampleComponent(initializers, storage);
      +            return instance;
      +        });
      +        receiver._build();
      +        return receiver;
      +    }
      +}
      +/** @memo */
      +export function LocalStoragePropExample(initializers?: any) {
      +    return ArkLocalStoragePropExampleComponent._invoke(initializers);
      +}
      +registerArkuiEntry(LocalStoragePropExample, "Rewrite3");
      +export const __Entry = LocalStoragePropExample;
      
      at Context.<anonymous> (test\rewrites.test.ts:19:16)
      at processImmediate (node:internal/timers:471:21)



