package xml;
namespace xml {

    [Entity=Class]
    interface XmlSerializer {

        constructor(buffer buffer, optional String encoding);
        void setAttributes(String name, String value);
        void addEmptyElement(String name);
        void setDeclaration();
        void startElement(String name);
        void endElement();
        void setNamespace(String prefix, String namespace);
        void setComment(String text);
        void setCDATA(String text);
        void setText(String text);
        void setDocType(String text);

    };
    dictionary EventType {

        number START_DOCUMENT = 0;
        number END_DOCUMENT = 1;
        number START_TAG = 2;
        number END_TAG = 3;
        number TEXT = 4;
        number CDSECT = 5;
        number COMMENT = 6;
        number DOCDECL = 7;
        number INSTRUCTION = 8;
        number ENTITY_REFERENCE = 9;
        number WHITESPACE = 10;

    };
    [Entity=Interface]
    interface ParseInfo {

        number getColumnNumber();
        number getDepth();
        number getLineNumber();
        String getName();
        String getNamespace();
        String getPrefix();
        String getText();
        boolean isEmptyElementTag();
        boolean isWhitespace();
        number getAttributeCount();

    };
    [Synthetic]
    callback Callback_String_String_Boolean = boolean (String name, String value);
    [Synthetic]
    callback Callback_EventType_ParseInfo_Boolean = boolean (EventType eventType, ParseInfo value);
    [Entity=Interface]
    interface ParseOptions {

        [Optional]
        attribute boolean supportDoctype;
        [Optional]
        attribute boolean ignoreNameSpace;
        [Optional]
        attribute Callback_String_String_Boolean tagValueCallbackFunction;
        [Optional]
        attribute Callback_String_String_Boolean attributeValueCallbackFunction;
        [Optional]
        attribute Callback_EventType_ParseInfo_Boolean tokenValueCallbackFunction;

    };
    [Entity=Class]
    interface XmlPullParser {

        constructor(buffer buffer, optional String encoding);
        [Deprecated]
        void parse(ParseOptions option);
        void parseXml(ParseOptions option);

    };

};