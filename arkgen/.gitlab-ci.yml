image: "nexus.bz-openlab.ru:10443/huawei/koala-ci:0.2.5"

stages:
  - notify
  - build
  - test
  - pre-deploy
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

variables:
  GIT_SUBMODULE_STRATEGY: recursive

include:
    - gitlab/setup.yml
    - gitlab/npm.yml
    - gitlab/notify.yml

# notify-release:
#   stage: notify
#   tags:
#     - idlize-ci
#     - koala-ci
#   script:
#     - version=$(cat ./VERSION)
#     - node ./tools/telegram/notify-release.mjs $version
#   rules:
#     - if: $CI_COMMIT_BRANCH != 'master'
#       changes:
#         compare_to: 'refs/heads/master'
#         paths:
#           - VERSION

idlize sanity:
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  dependencies:
  - download sdk
  - build external
  script:
    - !reference [.npm, script]
    - !reference [.panda, script]
    - npm run sanity
  # after_script:
  #   - !reference [.notify-telegram, script]

pg java:run:
  allow_failure: true
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  before_script:
    - !reference [.npm, script]
    - !reference [.panda, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-arm64 npm run run:java

pg cj:run:
  allow_failure: true
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  before_script:
    - !reference [.setup, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run run:cj

run arkts subset:
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  dependencies:
    - build external
  before_script:
    - !reference [.npm, script]
    - !reference [.panda, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run run:panda:subset

compile arkts peers:
  stage: test
  when: manual
  tags:
    - idlize-ci
    - koala-ci
  dependencies:
  - download sdk
  - build external
  before_script:
    - !reference [.npm, script]
    - !reference [.panda, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run make:compile:arkts:peers

build arkoala-ts:
  allow_failure: true
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  before_script:
    - !reference [.npm, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run compile
    - KOALA_BZ=1 OPENLAB_USERNAME=koala-ci OPENLAB_PASSWORD=w1llUgu3ss npm run arkoala:ts

#build arkoala-ts-native-arm64:
#  stage: test
#  allow_failure: true
#  tags:
#    - idlize-ci
#    - koala-ci
#  before_script:
#    - !reference [.setup, script]
#  script:
#    - KOALA_BZ=1 OPENLAB_USERNAME=koala-ci OPENLAB_PASSWORD=w1llUgu3ss npm run arkoala:ts:native:arm64
#
#build arkoala-ts-native-arm32:
#  stage: test
#  allow_failure: true
#  tags:
#    - idlize-ci
#    - koala-ci
#  before_script:
#    - !reference [.setup, script]
#  script:
#    - KOALA_BZ=1 OPENLAB_USERNAME=koala-ci OPENLAB_PASSWORD=w1llUgu3ss npm run arkoala:ts:native:arm32

# todo: enable when meson is configured on CI
#build arkoala.har:
#  stage: test
#  tags:
#    - idlize-ci
#    - koala-ci
#  before_script:
#    - !reference [.setup, script]
#  script:
#    - KOALA_BZ=1 OPENLAB_USERNAME=koala-ci OPENLAB_PASSWORD=w1llUgu3ss npm run arkoala:har-arm32
#    - cp $CI_PROJECT_DIR/external/arkoala/har/app/arkoala/build/default/outputs/default/arkoala.har $CI_PROJECT_DIR/
#  artifacts:
#      expire_in: 1 week
#      paths:
#          - arkoala.har

# Build targets
build idlize-arkgen:
  stage: build
  tags:
  - idlize-ci
  - koala-ci
  before_script:
    - !reference [.npm, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run compile
  artifacts:
    expire_in: 2 days
    paths:
      - arkgen/build
      - arkgen/lib
      - arkgen/out


build idlize-core:
  stage: build
  tags:
  - idlize-ci
  - koala-ci
  before_script:
    - !reference [.npm, script]
    - cd $CI_PROJECT_DIR/core
  script:
    - npm run compile
  artifacts:
    expire_in: 2 days
    paths:
      - core/build

build idlize-linter:
  stage: build
  tags:
  - idlize-ci
  - koala-ci
  dependencies:
  - build idlize-core
  before_script:
    - !reference [.npm, script]
    - cd $CI_PROJECT_DIR/linter
  script:
    - npm run compile
  artifacts:
    expire_in: 2 days
    paths:
      - linter/build

# Pack targets
pack idlize-arkgen:
  extends:
    - .npm-pack
  variables:
    PACKAGE_DIR: arkgen
  dependencies:
    - build idlize-arkgen

pack idlize-core:
  extends:
    - .npm-pack
  variables:
    PACKAGE_DIR: core
  dependencies:
    - build idlize-core

pack idlize-linter:
  extends:
    - .npm-pack
  variables:
    PACKAGE_DIR: linter
  dependencies:
    - build idlize-linter


# Publish targets
publish idlize-arkgen:
  extends:
    - .npm-publish
  variables:
    PACKAGE_DIR: arkgen
  dependencies:
    - build idlize-arkgen

publish idlize-core:
  extends:
    - .npm-publish
  variables:
    PACKAGE_DIR: core
  dependencies:
    - build idlize-core

publish idlize-linter:
  extends:
    - .npm-publish
  variables:
    PACKAGE_DIR: linter
  dependencies:
    - build idlize-linter


check index-full:
    stage: test
    tags:
      - idlize-ci
      - koala-ci
    dependencies:
    - download sdk
    - build external
    before_script:
    - !reference [.npm, script]
    - !reference [.panda, script]
    - cd $CI_PROJECT_DIR/arkgen
    script:
        - npm run check:peers:ets
        - npm run check:index-full:ts

subset CAPI golden:
  stage: test
  tags:
    - idlize-ci
    - koala-ci
  before_script:
    - !reference [.npm, script]
    - cd $CI_PROJECT_DIR/arkgen
  script:
    - npm run test:subset-api