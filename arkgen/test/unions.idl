dictionary Parity {
    number EVEN = 0;
    number ODD = 1;
};

interface PriceTag {
    attribute number price;
    attribute String currency;
};

[Entity=Literal]
interface MeasurementLiteral {
    attribute number value;
    attribute String unit;
};

[Entity=Class]
interface MeasurementClass {
    attribute number value;
    attribute String unit;
};

interface Boolean {
    attribute boolean value;
};


// Test cases. We should be able to discriminate each property's type
interface TestCases {
    attribute (Length or number or Parity) testLengthNumberEnum;
    attribute (sequence<number> or ArrayBuffer) testArrayBuffer;
    attribute (PriceTag or MeasurementLiteral) testInterfaceLiteral;
    attribute (PriceTag or MeasurementClass) testInterfaceClass;
    attribute (Boolean or boolean) testInterfacePrimitive;
};
