// Context

// Fails in Java
// Materialized class Context implements BaseContext
//[Entity=Class]
//interface BaseContext {
//    attribute boolean stageMode;
//};

// [Async, Synthetic]
// callback AsyncCallback_String_Void = void (String result);

//[Entity=Class]
//interface Context: BaseContext {
    // attribute resmgr.ResourceManager resourceManager;
    // attribute ApplicationInfo applicationInfo;
    // attribute String cacheDir;
    // attribute String tempDir;
    // attribute String filesDir;
    // attribute String databaseDir;
    // attribute String preferencesDir;
    // attribute String bundleCodeDir;
    // attribute String distributedFilesDir;
    // attribute String resourceDir;
    // attribute String cloudFileDir;
    // attribute EventHub eventHub;
    // attribute contextConstant.AreaMode area;
//    [Deprecated]
//    Context createBundleContext(String bundleName);
//    [Deprecated]
//    Context createModuleContext(String moduleName);
    // [Deprecated]
    // Context createModuleContext(String bundleName, String moduleName);
    // resmgr.ResourceManager createSystemHspModuleResourceManager(String bundleName, String moduleName);
    // ApplicationContext getApplicationContext();
    // void getGroupDir(String dataGroupID, AsyncCallback_String_Void callback_);
    // async String getGroupDir(String dataGroupID);
    // resmgr.ResourceManager createModuleResourceManager(String bundleName, String moduleName);
//};

// Cursor
dictionary PointerStyle {
    number DEFAULT = 0;
    number EAST = 1;
    number WEST = 2;
    number SOUTH = 3;
    number NORTH = 4;
    number WEST_EAST = 5;
    number NORTH_SOUTH = 6;
    number NORTH_EAST = 7;
    number NORTH_WEST = 8;
    number SOUTH_EAST = 9;
    number SOUTH_WEST = 10;
    number NORTH_EAST_SOUTH_WEST = 11;
    number NORTH_WEST_SOUTH_EAST = 12;
    number CROSS = 13;
    number CURSOR_COPY = 14;
    number CURSOR_FORBID = 15;
    number COLOR_SUCKER = 16;
    number HAND_GRABBING = 17;
    number HAND_OPEN = 18;
    number HAND_POINTING = 19;
    number HELP = 20;
    number MOVE = 21;
    number RESIZE_LEFT_RIGHT = 22;
    number RESIZE_UP_DOWN = 23;
    number SCREENSHOT_CHOOSE = 24;
    number SCREENSHOT_CURSOR = 25;
    number TEXT_CURSOR = 26;
    number ZOOM_IN = 27;
    number ZOOM_OUT = 28;
    number MIDDLE_BTN_EAST = 29;
    number MIDDLE_BTN_WEST = 30;
    number MIDDLE_BTN_SOUTH = 31;
    number MIDDLE_BTN_NORTH = 32;
    number MIDDLE_BTN_NORTH_SOUTH = 33;
    number MIDDLE_BTN_NORTH_EAST = 34;
    number MIDDLE_BTN_NORTH_WEST = 35;
    number MIDDLE_BTN_SOUTH_EAST = 36;
    number MIDDLE_BTN_SOUTH_WEST = 37;
    number MIDDLE_BTN_NORTH_SOUTH_WEST_EAST = 38;
    number HORIZONTAL_TEXT_CURSOR = 39;
    number CURSOR_CROSS = 40;
    number CURSOR_CIRCLE = 41;
    number LOADING = 42;
    number RUNNING = 43;
};

// UnifiedData

// [Entity=Class]
// interface UnifiedDataProperties {
    // [Optional]
    // attribute record<String, Object> extras;
    // [Optional]
    // attribute String tag;
    // [Optional]
    // readonly attribute Date timestamp;
    // [Optional]
    // attribute ShareOptions shareOptions;
    // [Optional]
    // attribute GetDelayData getDelayData;
// };

[Entity=Class]
interface UnifiedData {
    // constructor(UnifiedRecord record_);
    constructor();
    // attribute UnifiedDataProperties properties;
    // void addRecord(UnifiedRecord record_);
    // sequence<UnifiedRecord> getRecords();
    boolean hasType(String UnifiedData_type);
    sequence<String> getTypes();
};

callback Callback_RangeUpdate = void (i32 index, pointer mark, i32 end);

[Entity=Class]
interface LazyForEachOps {
    static pointer NeedMoreElements(pointer node, pointer mark, i32 direction);
    static void OnRangeUpdate(pointer node, i32 totalCount, Callback_RangeUpdate updater);
    // Test method to enforce current index update.
    static void SetCurrentIndex(pointer node, i32 index);
    static void Prepare(pointer node, i32 itemCount, i32 offset);
    static void NotifyChange(pointer node, i32 startIndex, i32 endIndex, i32 count);
};

[Entity=Class]
interface SystemOps {
    static pointer StartFrame();
    static void EndFrame(pointer root);
};
