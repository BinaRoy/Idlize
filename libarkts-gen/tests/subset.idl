interface AstNode {};
interface Context {};

dictionary ScriptFunctionFlags {
};
dictionary ModifierFlags {
};
dictionary Es2pandaScriptFunctionFlags {
};

interface BlockStatement : AstNode {
    constructor(Context context, sequence<AstNode> statementList, i32 statementListLen);

    void SetScope(Context context, AstNode ast, Scope scope);
    sequence<AstNode> StatementsConst(Context context, AstNode ast);
    sequence<AstNode> Statements(Context context, AstNode ast);
    void SetStatements(Context context, AstNode ast, sequence<AstNode> statementList, i32 statementListLen);
    void AddTrailingBlock(Context context, AstNode ast, AstNode stmt, AstNode trailingBlock);
};

interface ScriptFunction : AstNode {
    constructor(Context context, AstNode databody, FunctionSignature datasignature, i32 datafuncFlags, i32 dataflags);
    AstNode IdConst(Context context, AstNode ast);
    AstNode Id(Context context, AstNode ast);
    Signature SignatureConst(Context context, AstNode ast);
    Signature Signature(Context context, AstNode ast);
    FunctionSignature IrSignature(Context context, AstNode ast);
    sequence<AstNode> ParamsConst(Context context, AstNode ast);
    sequence<AstNode> Params(Context context, AstNode ast);
    i32 DefaultParamIndexConst(Context context, AstNode ast);
    sequence<AstNode> ReturnStatementsConst(Context context, AstNode ast);
    sequence<AstNode> ReturnStatements(Context context, AstNode ast);
    AstNode TypeParamsConst(Context context, AstNode ast);
    AstNode TypeParams(Context context, AstNode ast);
    AstNode BodyConst(Context context, AstNode ast);
    AstNode Body(Context context, AstNode ast);
    void AddReturnStatement(Context context, AstNode ast, AstNode returnStatement);
    void SetBody(Context context, AstNode ast, AstNode body);
    AstNode ReturnTypeAnnotationConst(Context context, AstNode ast);
    AstNode ReturnTypeAnnotation(Context context, AstNode ast);
    void SetReturnTypeAnnotation(Context context, AstNode ast, AstNode node);
    boolean IsEntryPointConst(Context context, AstNode ast);
    boolean IsGeneratorConst(Context context, AstNode ast);
    boolean IsAsyncFuncConst(Context context, AstNode ast);
    boolean IsAsyncImplFuncConst(Context context, AstNode ast);
    boolean IsArrowConst(Context context, AstNode ast);
    boolean IsOverloadConst(Context context, AstNode ast);
    boolean IsExternalOverloadConst(Context context, AstNode ast);
    boolean IsConstructorConst(Context context, AstNode ast);
    boolean IsGetterConst(Context context, AstNode ast);
    boolean IsSetterConst(Context context, AstNode ast);
    boolean IsMethodConst(Context context, AstNode ast);
    boolean IsProxyConst(Context context, AstNode ast);
    boolean IsStaticBlockConst(Context context, AstNode ast);
    boolean IsEnumConst(Context context, AstNode ast);
    boolean IsHiddenConst(Context context, AstNode ast);
    boolean IsExternalConst(Context context, AstNode ast);
    boolean IsImplicitSuperCallNeededConst(Context context, AstNode ast);
    boolean HasBodyConst(Context context, AstNode ast);
    boolean HasRestParameterConst(Context context, AstNode ast);
    boolean HasReturnStatementConst(Context context, AstNode ast);
    boolean HasThrowStatementConst(Context context, AstNode ast);
    boolean IsThrowingConst(Context context, AstNode ast);
    boolean IsRethrowingConst(Context context, AstNode ast);
    boolean IsDynamicConst(Context context, AstNode ast);
    boolean IsExtensionMethodConst(Context context, AstNode ast);
    Es2pandaScriptFunctionFlags FlagsConst(Context context, AstNode ast);
    void SetIdent(Context context, AstNode ast, AstNode id);
    void SetSignature(Context context, AstNode ast, Signature signature);
    void AddFlag(Context context, AstNode ast, Es2pandaScriptFunctionFlags flags);
    void AddModifier(Context context, AstNode ast, Es2pandaModifierFlags flags);
    i32 FormalParamsLengthConst(Context context, AstNode ast);
    void SetScope(Context context, AstNode ast, Scope scope);
};