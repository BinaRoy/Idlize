[Entity=Class] interface es2panda_Context {};
[Entity=Class] interface es2panda_Type {};
[Entity=Class] interface es2panda_AstNode {};
[Entity=Class] interface es2panda_Scope {};
[Entity=Class] interface es2panda_Signature {};

dictionary Es2pandaModifierFlags {
    i32 MODIFIER_FLAGS_NONE = 0;
    i32 MODIFIER_FLAGS_STATIC = 1;
    i32 MODIFIER_FLAGS_ASYNC = 2;
    i32 MODIFIER_FLAGS_PUBLIC = 4;
    i32 MODIFIER_FLAGS_PROTECTED = 8;
    i32 MODIFIER_FLAGS_PRIVATE = 16;
    i32 MODIFIER_FLAGS_DECLARE = 32;
    i32 MODIFIER_FLAGS_READONLY = 64;
    i32 MODIFIER_FLAGS_OPTIONAL = 128;
    i32 MODIFIER_FLAGS_DEFINITE = 256;
    i32 MODIFIER_FLAGS_ABSTRACT = 512;
    i32 MODIFIER_FLAGS_CONST = 1024;
    i32 MODIFIER_FLAGS_FINAL = 2048;
    i32 MODIFIER_FLAGS_NATIVE = 4096;
    i32 MODIFIER_FLAGS_OVERRIDE = 8192;
    i32 MODIFIER_FLAGS_CONSTRUCTOR = 16384;
    i32 MODIFIER_FLAGS_SYNCHRONIZED = 32768;
    i32 MODIFIER_FLAGS_FUNCTIONAL = 65536;
    i32 MODIFIER_FLAGS_IN = 131072;
    i32 MODIFIER_FLAGS_OUT = 262144;
    i32 MODIFIER_FLAGS_INTERNAL = 524288;
    i32 MODIFIER_FLAGS_EXPORT = 1048576;
    i32 MODIFIER_FLAGS_GETTER = 2097152;
    i32 MODIFIER_FLAGS_SETTER = 4194304;
    i32 MODIFIER_FLAGS_DEFAULT_EXPORT = 8388608;
    i32 MODIFIER_FLAGS_EXPORT_TYPE = 16777216;
    i32 MODIFIER_FLAGS_SUPER_OWNER = 33554432;
    i32 MODIFIER_FLAGS_ANNOTATION_DECLARATION = 67108864;
    i32 MODIFIER_FLAGS_ANNOTATION_USAGE = 134217728;
    i32 MODIFIER_FLAGS_READONLY_PARAMETER = 268435456;
    i32 MODIFIER_FLAGS_ACCESS = 524316;
    i32 MODIFIER_FLAGS_ALL = 524927;
    i32 MODIFIER_FLAGS_ALLOWED_IN_CTOR_PARAMETER = 524380;
    i32 MODIFIER_FLAGS_INTERNAL_PROTECTED = 524296;
    i32 MODIFIER_FLAGS_ACCESSOR_MODIFIERS = 2560;
    i32 MODIFIER_FLAGS_GETTER_SETTER = 6291456;
    i32 MODIFIER_FLAGS_EXPORTED = 26214400;
};

dictionary Es2pandaScriptFunctionFlags {
    i32 SCRIPT_FUNCTION_FLAGS_NONE = 0;
    i32 SCRIPT_FUNCTION_FLAGS_GENERATOR = 1;
    i32 SCRIPT_FUNCTION_FLAGS_ASYNC = 2;
    i32 SCRIPT_FUNCTION_FLAGS_ARROW = 4;
    i32 SCRIPT_FUNCTION_FLAGS_EXPRESSION = 8;
    i32 SCRIPT_FUNCTION_FLAGS_OVERLOAD = 16;
    i32 SCRIPT_FUNCTION_FLAGS_CONSTRUCTOR = 32;
    i32 SCRIPT_FUNCTION_FLAGS_METHOD = 64;
    i32 SCRIPT_FUNCTION_FLAGS_STATIC_BLOCK = 128;
    i32 SCRIPT_FUNCTION_FLAGS_HIDDEN = 256;
    i32 SCRIPT_FUNCTION_FLAGS_IMPLICIT_SUPER_CALL_NEEDED = 512;
    i32 SCRIPT_FUNCTION_FLAGS_ENUM = 1024;
    i32 SCRIPT_FUNCTION_FLAGS_EXTERNAL = 2048;
    i32 SCRIPT_FUNCTION_FLAGS_PROXY = 4096;
    i32 SCRIPT_FUNCTION_FLAGS_THROWS = 8192;
    i32 SCRIPT_FUNCTION_FLAGS_RETHROWS = 16384;
    i32 SCRIPT_FUNCTION_FLAGS_GETTER = 32768;
    i32 SCRIPT_FUNCTION_FLAGS_SETTER = 65536;
    i32 SCRIPT_FUNCTION_FLAGS_ENTRY_POINT = 131072;
    i32 SCRIPT_FUNCTION_FLAGS_INSTANCE_EXTENSION_METHOD = 262144;
    i32 SCRIPT_FUNCTION_FLAGS_HAS_RETURN = 524288;
    i32 SCRIPT_FUNCTION_FLAGS_ASYNC_IMPL = 1048576;
    i32 SCRIPT_FUNCTION_FLAGS_EXTERNAL_OVERLOAD = 2097152;
    i32 SCRIPT_FUNCTION_FLAGS_HAS_THROW = 4194304;
};


[Entity=Class] interface Statement: AstNode {

    void SetReturnType(es2panda_Context context, es2panda_Type type);
};

[Entity=Class] interface es2panda_FunctionSignature {};

[Entity=Class] interface FunctionDeclaration: Statement {
    static es2panda_AstNode CreateFunctionDeclaration(es2panda_Context context, es2panda_AstNode func, sequence<es2panda_AstNode> annotations, u32 annotationsLen, boolean isAnonymous);

    static es2panda_AstNode UpdateFunctionDeclaration(es2panda_Context context, es2panda_AstNode original, es2panda_AstNode func, sequence<es2panda_AstNode> annotations, u32 annotationsLen, boolean isAnonymous);
    static es2panda_AstNode CreateFunctionDeclaration1(es2panda_Context context, es2panda_AstNode func, boolean isAnonymous);

    static es2panda_AstNode UpdateFunctionDeclaration1(es2panda_Context context, es2panda_AstNode original, es2panda_AstNode func, boolean isAnonymous);


    es2panda_AstNode Function(es2panda_Context context);
    boolean IsAnonymousConst(es2panda_Context context);
    es2panda_AstNode FunctionConst(es2panda_Context context);
};

[Entity=Class] interface ScriptFunction: AstNode {
    static es2panda_AstNode CreateScriptFunction(es2panda_Context context, es2panda_AstNode databody, es2panda_FunctionSignature datasignature, i32 datafuncFlags, i32 dataflags);

    static es2panda_AstNode UpdateScriptFunction(es2panda_Context context, es2panda_AstNode original, es2panda_AstNode databody, es2panda_FunctionSignature datasignature, i32 datafuncFlags, i32 dataflags);


    es2panda_AstNode IdConst(es2panda_Context context);
    es2panda_AstNode Id(es2panda_Context context);
    es2panda_Signature SignatureConst(es2panda_Context context);
    es2panda_Signature Signature(es2panda_Context context);
    es2panda_FunctionSignature IrSignature(es2panda_Context context);
    sequence<es2panda_AstNode> ParamsConst(es2panda_Context context, u32 returnTypeLen);
    sequence<es2panda_AstNode> Params(es2panda_Context context, u32 returnTypeLen);
    u32 DefaultParamIndexConst(es2panda_Context context);
    sequence<es2panda_AstNode> ReturnStatementsConst(es2panda_Context context, u32 returnTypeLen);
    sequence<es2panda_AstNode> ReturnStatements(es2panda_Context context, u32 returnTypeLen);
    es2panda_AstNode TypeParamsConst(es2panda_Context context);
    es2panda_AstNode TypeParams(es2panda_Context context);
    es2panda_AstNode BodyConst(es2panda_Context context);
    es2panda_AstNode Body(es2panda_Context context);
    void AddReturnStatement(es2panda_Context context, es2panda_AstNode returnStatement);
    void SetBody(es2panda_Context context, es2panda_AstNode body);
    es2panda_AstNode ReturnTypeAnnotationConst(es2panda_Context context);
    es2panda_AstNode ReturnTypeAnnotation(es2panda_Context context);
    void SetReturnTypeAnnotation(es2panda_Context context, es2panda_AstNode node);
    boolean IsEntryPointConst(es2panda_Context context);
    boolean IsGeneratorConst(es2panda_Context context);
    boolean IsAsyncFuncConst(es2panda_Context context);
    boolean IsAsyncImplFuncConst(es2panda_Context context);
    boolean IsArrowConst(es2panda_Context context);
    boolean IsOverloadConst(es2panda_Context context);
    boolean IsExternalOverloadConst(es2panda_Context context);
    boolean IsConstructorConst(es2panda_Context context);
    boolean IsGetterConst(es2panda_Context context);
    boolean IsSetterConst(es2panda_Context context);
    boolean IsMethodConst(es2panda_Context context);
    boolean IsProxyConst(es2panda_Context context);
    boolean IsStaticBlockConst(es2panda_Context context);
    boolean IsEnumConst(es2panda_Context context);
    boolean IsHiddenConst(es2panda_Context context);
    boolean IsExternalConst(es2panda_Context context);
    boolean IsImplicitSuperCallNeededConst(es2panda_Context context);
    boolean HasBodyConst(es2panda_Context context);
    boolean HasRestParameterConst(es2panda_Context context);
    boolean HasReturnStatementConst(es2panda_Context context);
    boolean HasThrowStatementConst(es2panda_Context context);
    boolean IsThrowingConst(es2panda_Context context);
    boolean IsRethrowingConst(es2panda_Context context);
    boolean IsDynamicConst(es2panda_Context context);
    boolean IsExtensionMethodConst(es2panda_Context context);
    Es2pandaScriptFunctionFlags FlagsConst(es2panda_Context context);
    void SetIdent(es2panda_Context context, es2panda_AstNode id);
    void SetSignature(es2panda_Context context, es2panda_Signature signature);
    void AddFlag(es2panda_Context context, Es2pandaScriptFunctionFlags flags);
    void AddModifier(es2panda_Context context, Es2pandaModifierFlags flags);
    u32 FormalParamsLengthConst(es2panda_Context context);
    void SetScope(es2panda_Context context, es2panda_Scope scope);
};